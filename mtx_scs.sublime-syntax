%YAML 1.2
# The MIT License (MIT)
#
# Copyright (c) 2016 DeathAxe <deathaxe82@googlemail.com>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to
# deal in the Software without restriction, including without limitation the
# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
# sell copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
# IN THE SOFTWARE.
###############################################################################
---
name: MTX Sercos Settings
file_extensions:
  - scs
scope: source.mtx_scs

###############################################################################
# MAIN CONTEXT
###############################################################################

contexts:

  main:
    - include: comment
    - include: dbg
    - include: use
    - include: assignment

###############################################################################
# STATEMENTS
###############################################################################

  dbg:
    - match: ^\s*dbg\b
      scope: keyword.control.mtx_scs
      push:
        - meta_scope: meta.definition.dbg.mtx_scs
        - match: '\b\w+(?:\.\w+)?\b'
          scope: string.unquoted.mtx_scs
        - include: line-end

  use:
    - match: ^\s*use\b
      scope: keyword.control.mtx_scs
      push:
        - meta_scope: meta.definition.use.mtx_scs
        - match: '\b\w+(?:\.\w+)?\b'
          scope: string.unquoted.mtx_scs
          set:
            - meta_content_scope: meta.definition.use.mtx_scs
            - match: \bfor\b
              scope: keyword.control.mtx_scs
              set:
                - meta_content_scope: meta.definition.use.mtx_scs
                - match: \(
                  scope: punctuation.arguments.begin.mtx_scs
                  set:
                    - meta_content_scope: meta.definition.use.mtx_scs
                    - match: \)
                      scope: punctuation.arguments.end.mtx_scs
                      pop: true
                    - match: ','
                      scope: punctuation.arguments.seperator.mtx_scs
                    - match: \d+
                      scope: constant.numeric.mtx_scs
                - include: line-end
            - include: line-end
        - include: line-end

  assignment:
    - match: '\b[PS](?:(-)\d)?(-)\d+(?:(\.)\d(\.)\d)?'
      scope: entity.name.variable.mtx_scs
      captures:
        1: keyword.operator.seperator.mtx_scs
        2: keyword.operator.seperator.mtx_scs
        3: keyword.operator.seperator.mtx_scs
        4: keyword.operator.seperator.mtx_scs
      push:
        - match: '='
          scope: keyword.operator.assignment.mtx_scs
          set:
            - match: \(
              scope: punctuation.definition.begin.mtx_scs
              set:
                - meta_content_scope: meta.definition.parameter.mtx_scs
                - match: \)
                  scope: punctuation.definition.parameter.end.mtx_scs
                  pop: true
                - match: ','
                  scope: punctuation.arguments.seperator.mtx_scs
                - match: '\b[PS](?:(-)\d)?(-)\d+(?:(\.)\d(\.)\d)?'
                  scope: variable.language.parameter.mtx_scs
                  captures:
                    1: keyword.operator.seperator.mtx_scs
                    2: keyword.operator.seperator.mtx_scs
                    3: keyword.operator.seperator.mtx_scs
                    4: keyword.operator.seperator.mtx_scs
                - include: numbers
            - include: numbers
            - include: line-end
        - include: line-end

###############################################################################
# EXPRESSIONS
###############################################################################

  line-end:
    - match: $
      pop: true
    - include: comment
    - include: illegal

  comment:
    - match: ';.*$'
      scope: comment.line.mtx_scs
    - match: '//.*$'
      scope: comment.line.mtx_scs

  illegal:
    - match: \S+
      scope: invalid.illegal.mtx_scs

  numbers:
    - match: \b0b[01]+\b
      scope: constant.numeric.binary.mtx_scs
    - match: \b0h\h+\b
      scope: constant.numeric.hexadecimal.mtx_scs
    - match: \b\d+\.?\d*\b
      scope: constant.numeric.decimal.mtx_scs